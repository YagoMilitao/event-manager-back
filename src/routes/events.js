const express = require("express");
const router = express.Router();
const {verifyToken} = require("../middlewares/authMiddleware");
const upload = require("../middlewares/uploadImage"); // Importa a configuraÃ§Ã£o do multer
const {
  createEvent,
  createEventWithImages,
  getAllEvents,
  getEventById,
  getMyEvents,
  getImage,
  updateEvent,
  deleteEvent,
} = require("../controllers/eventController");
const isEventOwner = require("../middlewares/isEventOwner");

// ğŸ“Œ Criar evento (sem imagens)
router.post("/create-event", verifyToken, createEvent);

// ğŸ“Œ Criar evento com imagens
router.post(
  "/create-with-images",
  verifyToken, // âœ… Garante que o usuÃ¡rio tem um token vÃ¡lido
  upload, // âœ… Usa o middleware multer diretamente
  createEventWithImages  //âœ… Controller que salva o evento + imagens
);


// ğŸ“Œ Buscar todos os eventos (pÃºblico)
router.get("/", getAllEvents);

// ğŸ“Œ Buscar eventos do usuÃ¡rio autenticado
router.get("/my-event", verifyToken, getMyEvents);
router.get('/:id', getEventById);

// Obter imagem de evento
router.get("/image/:id", getImage);
// ğŸ“Œ Atualizar evento
router.put("/:id", verifyToken, isEventOwner, updateEvent);
// ğŸ“Œ Deletar evento
router.delete("/:id", verifyToken, isEventOwner, deleteEvent);

module.exports = router;